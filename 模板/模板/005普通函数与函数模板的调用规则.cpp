#include<iostream>
#include<string>
using namespace std;

/*
调用规则如下：
    1. 如果函数模板和普通函数都可以实现，优先调用普通函数
    2. 可以通过空模板参数列表来强制调用函数模板
    3. 函数模板也可以发生重载
    4. 如果函数模板可以产生更好的匹配,优先调用函数模板
*/
void myPrint005(int a, int b)
{
    cout << "调用的普通函数" << endl;
}

template<typename T>
void myPrint005(T a, T b)
{
    cout << "调用的模板" << endl;
}

//函数模板也可以发生函数重载
template<typename T>
void myPrint005(T a, T b, T c)
{
    cout << "调用重载的模板" << endl;
}
void test00501()
{
    //1、如果函数模板和普通函数都可以实现，优先调用普通函数
    // 注意 如果告诉编译器 普通函数是有的，但只是声明没有实现，或者不在当前文件内实现，就会报错找不到
    int a = 10;
    int b = 20;
    myPrint005(a, b); //调用普通函数
    //2、可以通过空模板参数列表来强制调用函数模板
    myPrint005<>(a, b); //调用函数模板
    //3、函数模板也可以发生重载
    int c = 30;
    myPrint005(a, b, c); //调用重载的函数模板
    //4、 如果函数模板可以产生更好的匹配,优先调用函数模板
    char c1 = 'a';
    char c2 = 'b';
    myPrint005(c1, c2); //调用函数模板
}
int main005() {
    test00501();


    system("pause");
    return 0;
}